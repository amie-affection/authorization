{"version":3,"sources":["redux/auth/authReducer.js","redux/rootReducer.js","redux/store.js","services/showAction.jsx","pages/HomePage/HomePage.jsx","pages/UserProfile/UserProfile.jsx","pages/AuthPage/AuthPage.jsx","hoc/withAuth.js","services/PrivateRoute.js","components/Header/Header.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","combineReducers","token","state","action","type","payload","isShowText","rootPersistConfig","key","storage","whitelist","rootReducer","authRoot","persistReducer","authReducer","middleware","thunk","store","next","console","log","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","connect","dispatch","makeToggle","showTextNow","hideTextNow","onClick","style","marginRight","border","backgroundColor","width","height","fontSize","UserProfile","withAuth","Component","allProps","to","useDispatch","useState","login","setLogin","password","setPassword","onSubmit","e","preventDefault","username","getState","params","URLSearchParams","append","post","then","res","data","message","catch","err","loginOperations","value","onChange","target","placeholder","marginLeft","background","color","PrivateRoute","component","useSelector","render","props","makeLogout","marginBottom","lineHeight","paddingLeft","App","exact","path","HomePage","AuthPage","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6207c15.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://uxcandy.com/~shapoval/test-task-backend/v2\";\r\n\r\n/* OPETATIONS */\r\nexport const loginOperations = (username, password) => (dispatch, getState) => {\r\n  console.log(username, password);\r\n\r\n  const params = new URLSearchParams();\r\n  params.append(\"username\", username);\r\n  params.append(\"password\", password);\r\n\r\n  return axios\r\n    .post(\"/login/?developer=Name\", params)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: \"auth/LOGIN_SUCCESS\",\r\n        payload: { token: res.data.message.token },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n/* REDUCERS */\r\nconst tokenReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"auth/LOGIN_SUCCESS\":\r\n      return action.payload.token;\r\n\r\n    case \"auth/LOGOUT_SUCCESS\":\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst isShowTextReducer = (state = true, action) => {\r\n  switch (action.type) {\r\n    case \"auth/IS_SHOW_TEXT\":\r\n      return !state;\r\n\r\n    case \"auth/SHOW_TEXT\":\r\n      return action.payload;\r\n\r\n    case \"auth/HIDE_TEXT\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  token: tokenReducer,\r\n  isShowText: isShowTextReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nconst rootPersistConfig = {\r\n  key: \"authRoot\",\r\n  storage: storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  authRoot: persistReducer(rootPersistConfig, authReducer),\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { showAction } from \"../services/showAction\";\r\n\r\nconst middleware = [thunk, showAction];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","export const showAction = (store) => (next) => (action) => {\r\n  console.log(action);\r\n\r\n  next(action);\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HomePage = ({ isShowText, makeToggle, showTextNow, hideTextNow }) => {\r\n  const toggle = () => makeToggle();\r\n\r\n  const showText = () => showTextNow();\r\n\r\n  const hideText = () => hideTextNow();\r\n\r\n  return (\r\n    <>\r\n      <h2>HomePage</h2>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={toggle}\r\n        style={{\r\n          marginRight: \"10px\",\r\n          border: \"none\",\r\n          backgroundColor: \"orange\",\r\n          width: \"80px\",\r\n          height: \"30px\",\r\n        }}\r\n      >\r\n        Flag\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={showText}\r\n        style={{\r\n          marginRight: \"10px\",\r\n          border: \"none\",\r\n          backgroundColor: \"orange\",\r\n          width: \"80px\",\r\n          height: \"30px\",\r\n        }}\r\n      >\r\n        Show Text\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={hideText}\r\n        style={{\r\n          marginRight: \"10px\",\r\n          border: \"none\",\r\n          backgroundColor: \"orange\",\r\n          width: \"80px\",\r\n          height: \"30px\",\r\n        }}\r\n      >\r\n        Hide Text\r\n      </button>\r\n\r\n      {isShowText && <p style={{ fontSize: \"30px\" }}>Welcome!</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    isShowText: state.authRoot.isShowText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    makeToggle: () => dispatch({ type: \"auth/IS_SHOW_TEXT\" }),\r\n\r\n    showTextNow: () =>\r\n      dispatch({\r\n        type: \"auth/SHOW_TEXT\",\r\n        payload: true,\r\n      }),\r\n\r\n    hideTextNow: () =>\r\n      dispatch({\r\n        type: \"auth/HIDE_TEXT\",\r\n        payload: false,\r\n      }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from \"react\";\r\n\r\nconst UserProfile = () => {\r\n  return <h2>UserProfile</h2>;\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from \"react\";\r\nimport withAuth from \"../../hoc/withAuth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {loginOperations} from '../../redux/auth/authReducer';\r\n\r\nconst AuthPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [login, setLogin] = useState(\"\");\r\n  const changeLogin = ({ target }) => setLogin(target.value);\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const changePassword = ({ target }) => setPassword(target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(loginOperations(login, password));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={login}\r\n        onChange={changeLogin}\r\n        placeholder=\"Login\"\r\n        style={{ marginLeft: \"20px\", marginRight: \"10px\", height: \"25px\" }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={changePassword}\r\n        placeholder=\"Password\"\r\n        style={{ marginRight: \"10px\", height: \"25px\" }}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        style={{\r\n          height: \"30px\",\r\n          width: \"70px\",\r\n          border: \"none\",\r\n          background: \"black\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default withAuth(AuthPage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst withAuth = (Component) => {\r\n  function withAuth({ token, ...allProps }) {\r\n    return token ? <Redirect to=\"/\" /> : <Component {...allProps} />;\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      token: state.authRoot.token,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps)(withAuth);\r\n};\r\n\r\nexport default withAuth;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...allProps }) => {\r\n  const token = useSelector((state) => state.authRoot.token);\r\n\r\n  return (\r\n    <Route\r\n      {...allProps}\r\n      render={(props) =>\r\n        token ? <Component {...props} /> : <Redirect to=\"/auth\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ token, makeLogout }) => {\r\n  const logout = () => makeLogout();\r\n\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <ul>\r\n          <li\r\n            style={{\r\n              marginBottom: \"5px\",\r\n              background: \"blue\",\r\n              width: \"105px\",\r\n              height: \"30px\",\r\n              lineHeight: \"30px\",\r\n              color: \"red\",\r\n            }}\r\n          >\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"white\", paddingLeft: \"5px\", fontSize: \"20px\" }}\r\n            >\r\n              HomePage\r\n            </Link>\r\n          </li>\r\n\r\n          {token && (\r\n            <li\r\n              style={{\r\n                marginBottom: \"5px\",\r\n                background: \"blue\",\r\n                width: \"105px\",\r\n                height: \"30px\",\r\n                lineHeight: \"30px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              <Link\r\n                to=\"/userProfile\"\r\n                style={{ color: \"white\", paddingLeft: \"5px\", fontSize: \"20px\" }}\r\n              >\r\n                UserProfile\r\n              </Link>\r\n            </li>\r\n          )}\r\n\r\n          {!token && (\r\n            <li\r\n              style={{\r\n                marginBottom: \"5px\",\r\n                background: \"blue\",\r\n                width: \"105px\",\r\n                height: \"30px\",\r\n                lineHeight: \"30px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              <Link\r\n                to=\"/auth\"\r\n                style={{ color: \"white\", paddingLeft: \"5px\", fontSize: \"20px\" }}\r\n              >\r\n                AuthPage\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n\r\n      {token && (\r\n        <button type=\"button\" onClick={logout}>\r\n          Logout\r\n        </button>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.authRoot.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    makeLogout: () =>\r\n      dispatch({\r\n        type: \"auth/LOGOUT_SUCCESS\",\r\n      }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport UserProfile from \"./pages/UserProfile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\nimport PrivateRoute from \"./services/PrivateRoute\";\nimport Header from \"./components/Header/Header\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <PrivateRoute path=\"/userProfile\" component={UserProfile} />\n        <Route path=\"/auth\" component={AuthPage} />\n      </Switch>\n      \n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}